{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,QAChCC,EAAUF,SAASG,iBAAiB,SACpCC,EAAUF,EAAQ,GAClBG,EAASH,EAAQ,GACjBI,EAAWJ,EAAQ,GAEzBH,EAAOQ,iBAAiB,UAExB,SAAuBC,GACrB,IACIC,EAAQC,OAAON,EAAQO,OAC3B,MAAMC,EAASF,OAAOJ,EAASK,OACzBE,EAAOH,OAAOL,EAAOM,OAC3B,IAAIG,EAEJ,IADAN,EAAMO,iBACDD,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC3B,MAAME,EAAgBC,KAAKC,SAAW,GACtC,IAAIC,SAAQ,CAACC,EAASC,KACpBC,YAAW,KACLN,EACFI,EAAQ,sBAXD,EAWkCN,QAAQL,OAEjDY,EAAO,qBAbA,EAagCP,QAAQL,OAEjDA,GAASI,CAAI,GACZJ,EAAQI,EAAOC,EAAE,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form');\nconst inputEl = document.querySelectorAll('input');\nconst delayEl = inputEl[0];\nconst stepEl = inputEl[1];\nconst amountEl = inputEl[2];\n\nformEl.addEventListener('submit', createPromise);\n\nfunction createPromise(event) {\n  let position = 1;\n  let delay = Number(delayEl.value);\n  const amount = Number(amountEl.value);\n  const step = Number(stepEl.value);\n  let i;\n  event.preventDefault();\n  for (i = 0; i < amount; i++) {\n    const shouldResolve = Math.random() > 0.3;\n    new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(` Fulfilled promise ${position + i} in ${delay}ms`);\n        } else {\n          reject(` Rejected promise ${position + i} in ${delay}ms`);\n        }\n        delay += step;\n      }, delay + step * i);\n    });\n  }\n}\n"],"names":["parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$inputEl","querySelectorAll","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","addEventListener","event","delay","Number","value","amount","step","i","preventDefault","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.41fa130d.js.map"}