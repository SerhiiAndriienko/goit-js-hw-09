{"mappings":"gfAAAA,EAAA,SAEA,IAAMC,EAASC,SAASC,cAAc,QAChCC,EAAUF,SAASG,iBAAiB,SACpCC,EAAUF,EAAQ,GAClBG,EAASH,EAAQ,GACjBI,EAAWJ,EAAQ,GAEzBH,EAAOQ,iBAAiB,UAExB,SAAuBC,GACrB,IAIIC,EAHAC,EAAQC,OAAOP,EAAQQ,OACrBC,EAASF,OAAOL,EAASM,OACzBE,EAAOH,OAAON,EAAOO,OAG3B,IADAJ,EAAMO,iBACDN,EAAI,EAAGA,EAAII,EAAQJ,IAAK,CAC3B,IAAMO,EAAgBC,KAAKC,SAAW,GACtC,IAAIC,SAAQ,SAACC,EAASC,GACpBC,YAAW,WACLN,EACFI,EAAQ,sBAAyCG,OAX1C,EAWkCd,EAAE,QAAYc,OAANb,EAAM,OAEvDW,EAAO,qBAAwCE,OAbxC,EAagCd,EAAE,QAAYc,OAANb,EAAM,OAEvDA,GAASI,C,GACRJ,EAAQI,EAAOL,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form');\nconst inputEl = document.querySelectorAll('input');\nconst delayEl = inputEl[0];\nconst stepEl = inputEl[1];\nconst amountEl = inputEl[2];\n\nformEl.addEventListener('submit', createPromise);\n\nfunction createPromise(event) {\n  let position = 1;\n  let delay = Number(delayEl.value);\n  const amount = Number(amountEl.value);\n  const step = Number(stepEl.value);\n  let i;\n  event.preventDefault();\n  for (i = 0; i < amount; i++) {\n    const shouldResolve = Math.random() > 0.3;\n    new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(` Fulfilled promise ${position + i} in ${delay}ms`);\n        } else {\n          reject(` Rejected promise ${position + i} in ${delay}ms`);\n        }\n        delay += step;\n      }, delay + step * i);\n    });\n  }\n}\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputEl","querySelectorAll","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","addEventListener","event","i","delay","Number","value","amount","step","preventDefault","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat"],"version":3,"file":"03-promises.81c49ac0.js.map"}